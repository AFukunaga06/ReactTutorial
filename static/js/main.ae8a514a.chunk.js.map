{"version":3,"sources":["reportWebVitals.js","contexts/ThemeContext.js","hoc/with-loading.js","components/tab-body-container.js","List.js","components/button.js","components/modal.js","FormModal.js","Hint.js","Form.js","const/languages.js","Header.js","App.js","AppContainer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","THEMES","light","color","backgroundColor","dark","ThemeContext","React","createContext","LoadDiv","styled","div","_templateObject","theme","Container","TabBodyContainer","children","title","_jsxs","_jsx","ListItem","List","langs","map","lang","index","Button","button","modalRoot","document","getElementById","Modal","props","ReactDOM","createPortal","ButtonWrapper","_templateObject2","FormModal","confirm","cancel","useContext","onClick","HintContainer","HintInner","PopupContainer","_templateObject3","Hint","showPopup","setShowPopup","useState","ref","useRef","useEffect","current","focus","onBlur","tabIndex","Label","label","Input","input","ButtonContainer","FormButton","_templateObject4","Form","onAddLang","text","setText","showModal","setShowModal","onSubmit","e","preventDefault","type","value","onChange","target","autoFocus","LANGUAGES","header","HeaderUl","ul","HeaderLi","li","focused","HeaderButton","Header","tab","setTab","toggleTheme","AppComponent","WrappedComponent","data","setLangs","fetchData","getLanguages","Promise","resolve","setTimeout","setData","fetch","async","Loading","withLoading","AppContainer","setTheme","Provider","render","StrictMode"],"mappings":"oMAYeA,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,EAAGC,SAAQC,SAAQC,SAAQC,SAAQC,cAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAExB,ECPK,MAAMQ,EAAS,CACpBC,MAAO,CACLC,MAAO,QACPC,gBAAiB,SAEnBC,KAAM,CACJF,MAAO,QACPC,gBAAiB,YAIRE,EAAeC,IAAMC,cAAc,CAACP,EAAOI,KAAM,S,uKCT9D,MAAMI,EAAUC,IAAOC,IAAGC,KAGf,EAAGC,WAAYA,EAAMV,QACV,EAAGU,WAAYA,EAAMT,kB,gGCN3C,MAAMU,EAAYJ,IAAOC,IAAGC,KAIfG,EAAmBA,EAAGC,WAAUC,WAEzCC,eAACJ,EAAS,CAAAE,SAAA,CACRG,cAAA,MAAAH,SAAMC,IACJD,K,kKCPR,MAAMI,EAAWV,IAAOC,IAAGC,KAQdS,EAAOA,EAAGC,WAEnBH,cAACJ,EAAgB,CAACE,MAAM,yDAAWD,SACjCG,cAAA,OAAAH,SAEIM,EAAMC,KAAI,CAACC,EAAMC,IACRN,cAACC,EAAQ,CAAAJ,SAAeQ,GAATC,S,yQCf3B,MAAMC,EAAShB,IAAOiB,OAAMf,K,sQCEnC,MAAMgB,EAAYC,SAASC,eAAe,cAEpChB,EAAYJ,IAAOC,IAAGC,KAYfmB,EAASC,GACbC,IAASC,aACdf,cAACL,EAAS,CAAAE,SACNgB,EAAMhB,WAEVY,G,oVCjBJ,MAAMd,EAAYJ,IAAOC,IAAGC,KAIjB,EAAGC,WAAYA,EAAMV,QACV,EAAGU,WAAYA,EAAMT,kBAC/B,EAAGS,WAAYA,IAAUZ,EAAOI,KAAO,kBAAoB,SAGjE8B,EAAgBzB,IAAOC,IAAGyB,KAMnBC,EAAYA,EAAGC,UAASC,aACnC,MAAO1B,GAAS2B,qBAAWlC,GAC3B,OACEa,cAACY,EAAK,CAAAf,SACJE,eAACJ,EAAS,CAACD,MAAOA,EAAMG,SAAA,CACtBG,cAAA,OAAAH,SAAK,iEACLE,eAACiB,EAAa,CAAAnB,SAAA,CACZG,cAACO,EAAM,CAACe,QAASF,EAAOvB,SAAC,WACzBG,cAACO,EAAM,CAACe,QAASH,EAAQtB,SAAC,cAGxB,E,0oBC7BZ,MAAM0B,EAAgBhC,IAAOC,IAAGC,KAM1B+B,EAAYjC,IAAOC,IAAGyB,KAWtBQ,EAAiBlC,IAAOC,IAAGkC,KAYpBC,EAAOA,KAClB,MAAOC,EAAWC,GAAgBC,oBAAS,GAErCC,EAAMC,iBAAO,MAKnB,OAHAC,qBAAU,KACJF,EAAIG,SAASH,EAAIG,QAAQC,OAAO,IAGpCpC,eAACwB,EAAa,CAAA1B,SAAA,CACZG,cAACwB,EAAS,CAACF,QAASA,IAAMO,GAAa,GAAMhC,SAAC,WAI5C+B,GACE5B,cAACyB,EAAc,CAACM,IAAKA,EAAKK,OAAQA,IAAMP,GAAa,GAAQQ,SAAU,EAAExC,SAAC,iDAKhE,E,ieC7CpB,MAAMyC,EAAQ/C,IAAOgD,MAAK9C,KAMpB+C,EAAQjD,IAAOkD,MAAKxB,KAKpByB,EAAkBnD,IAAOC,IAAGkC,KAG5BiB,EAAapD,YAAOgB,EAAPhB,CAAcqD,KAIpBC,EAAOA,EAAGC,gBACrB,MAAOC,EAAMC,GAAWlB,mBAAS,KAC1BmB,EAAWC,GAAgBpB,oBAAS,GAO3C,OACE/B,eAACH,EAAgB,CAACE,MAAM,mDAAUD,SAAA,CAChCE,eAAA,QAAMoD,SAPUC,IAClBA,EAAEC,iBACFH,GAAa,EAAK,EAKWrD,SAAA,CACzBE,eAAA,OAAAF,SAAA,CACEG,cAACsC,EAAK,CAAAzC,SAAC,iBACPG,cAACwC,EAAK,CAACc,KAAK,OAAOC,MAAOR,EAAMS,SAAWJ,GAAMJ,EAAQI,EAAEK,OAAOF,OAAQG,WAAS,IACnF1D,cAAC2B,EAAI,OAEP3B,cAAC0C,EAAe,CAAA7C,SACdG,cAAC2C,EAAU,CAAA9C,SAAC,sBAIdoD,GACEjD,cAACkB,EAAS,CACRC,QAASA,IAAM2B,EAAUC,GACzB3B,OAAQA,IAAM8B,GAAa,OAGhB,ECrDjBS,EAAY,CAChB,aACA,MACA,OACA,OACA,MACA,M,kkBCDF,MAAMhE,EAAYJ,IAAOqE,OAAMnE,KAOzBoE,GAAWtE,IAAOuE,GAAE7C,KAKpB8C,GAAWxE,IAAOyE,GAAEtC,KAIPb,GAASA,EAAMoD,QAAU,oBAAsB,SAG5DC,GAAe3E,YAAOgB,EAAPhB,CAAcqD,KAKtBuB,GAASA,EAAGC,MAAKC,aAC5B,MAAO3E,EAAO4E,GAAejD,qBAAWlC,GACxC,OACEY,eAACJ,EAAS,CAAAE,SAAA,CACRE,eAAC8D,GAAQ,CAAAhE,SAAA,CACPG,cAAC+D,GAAQ,CAACE,QAAiB,SAARG,EAAgB9C,QAASA,IAAM+C,EAAO,QAAQxE,SAAC,uBAClEG,cAAC+D,GAAQ,CAACE,QAAiB,SAARG,EAAgB9C,QAASA,IAAM+C,EAAO,QAAQxE,SAAC,gCAEpEG,cAACkE,GAAY,CAAC5C,QAASgD,EAAYzE,SAAC,qCAC1B,E,qIC7BhB,MAAMF,GAAYJ,IAAOC,IAAGC,MAEjB,EAAGC,WAAYA,EAAMV,QACV,EAAGU,WAAYA,EAAMT,kBCN3C,MAAMsF,IXKsBC,GUI5B,UAAa,KAAEC,IACb,MAAOL,EAAKC,GAAUvC,mBAAS,SACxB3B,EAAOuE,GAAY5C,mBAAS2C,IAE5B/E,GAAS2B,qBAAWlC,GAO3B,OACEY,eAACJ,GAAS,CAACD,MAAOA,EAAMG,SAAA,CACtBG,cAACmE,GAAM,CAACC,IAAKA,EAAKC,OAAQA,IAEhB,SAARD,EAAiBpE,cAACE,EAAI,CAACC,MAAOA,IAAYH,cAAC6C,EAAI,CAACC,UATrCzC,IACfqE,EAAS,IAAIvE,EAAOE,IACpBgE,EAAO,OAAO,MAWlB,EVvB8CM,GQFlBC,IACnB,IAAIC,SAASC,IAClBC,YAAW,KACTD,EAAQnB,EAAU,GACjB,IAAK,IRDH,KACL,MAAOc,EAAMO,GAAWlD,mBAAS,OAC1BpC,GAAS2B,qBAAWlC,GAE3B8C,qBAAU,KACRgD,GAAO,GACN,IAEH,MAAMA,EAAQC,UACZ,MAAMT,QAAaE,KACnBK,EAAQP,EAAK,EAGTU,EACJnF,cAACV,EAAO,CAACI,MAAOA,EAAMG,SAAC,gCAGzB,OAAO4E,EAAOzE,cAACwE,GAAgB,CAACC,KAAMA,IAAWU,CAAO,GAlBjCC,IAACZ,GAAkBG,GWHvC,MAAMU,GAAeA,KAC1B,MAAO3F,EAAO4F,GAAYxD,mBAAShD,EAAOI,MAO1C,OACEc,cAACb,EAAaoG,SAAQ,CAAChC,MAAO,CAAC7D,EANb4E,KAElBgB,EADmB5F,IAAUZ,EAAOI,KAAQJ,EAAOC,MAAQD,EAAOI,KAC/C,GAIgCW,SACjDG,cAACuE,GAAY,KACS,ECb5BzD,IAAS0E,OACPxF,cAACZ,IAAMqG,WAAU,CAAA5F,SACfG,cAACqF,GAAY,MAEf3E,SAASC,eAAe,SAM1BtC,G","file":"static/js/main.ae8a514a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\n\r\nexport const THEMES = {\r\n  light: {\r\n    color: 'black',\r\n    backgroundColor: 'white',\r\n  },\r\n  dark: {\r\n    color: 'white',\r\n    backgroundColor: '#222222',\r\n  }\r\n}\r\n\r\nexport const ThemeContext = React.createContext([THEMES.dark, () => {}]);\r\n\r\n","import styled from \"styled-components\";\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\n\r\nconst LoadDiv = styled.div`\r\n  height: 100%;\r\n  padding: 36px;\r\n  color: ${({ theme }) => theme.color};\r\n  background-color: ${({ theme }) => theme.backgroundColor};\r\n`\r\n\r\nexport const withLoading = (WrappedComponent, fetchData) => {\r\n  return () => {\r\n    const [data, setData] = useState(null);\r\n    const [theme] = useContext(ThemeContext);\r\n\r\n    useEffect(() => {\r\n      fetch();\r\n    }, [])\r\n\r\n    const fetch = async () => {\r\n      const data = await fetchData();\r\n      setData(data);\r\n    }\r\n\r\n    const Loading = (\r\n      <LoadDiv theme={theme}>ロード中...</LoadDiv>\r\n    )\r\n\r\n    return data ? <WrappedComponent data={data} /> : Loading;\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 12px 64px;\r\n`\r\n\r\nexport const TabBodyContainer = ({ children, title }) => {\r\n  return (\r\n    <Container>\r\n      <h4>{ title }</h4>\r\n      { children }\r\n    </Container>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\nimport { TabBodyContainer } from \"./components/tab-body-container\";\r\n\r\nconst ListItem = styled.div`\r\n  padding: 8px 16px;\r\n  \r\n  &:nth-child(n+2) {\r\n    border-top: 1px solid #D9DBDE;\r\n  }\r\n`\r\n\r\nexport const List = ({ langs }) => {\r\n  return (\r\n    <TabBodyContainer title=\"取り扱い言語リスト\">\r\n      <div>\r\n        {\r\n          langs.map((lang, index) => {\r\n            return <ListItem key={index}>{ lang }</ListItem>\r\n          })\r\n        }\r\n      </div>\r\n    </TabBodyContainer>\r\n  )\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  border-radius: 3px;\r\n  background-color: #2196F3;\r\n  padding: 8px 16px;\r\n  min-width: 100px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  color: white;\r\n  cursor: pointer;\r\n`\r\n","import ReactDOM from 'react-dom'\r\nimport { useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: rgba(0, 0, 0, .5);\r\n`\r\n\r\nexport const Modal = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <Container>\r\n      { props.children }\r\n    </Container>,\r\n    modalRoot\r\n  )\r\n}\r\n","import { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Modal } from \"./components/modal\";\r\nimport { Button } from \"./components/button\";\r\nimport { ThemeContext,THEMES } from \"./contexts/ThemeContext\";\r\n\r\nconst Container = styled.div`\r\n  width: 240px;\r\n  border-radius: 10px;\r\n  padding: 24px 36px;\r\n  color: ${({ theme }) => theme.color};\r\n  background-color: ${({ theme }) => theme.backgroundColor};\r\n  border: ${({ theme }) => theme === THEMES.dark ? '2px solid white' : 'none'};\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-top: 24px;\r\n`\r\n\r\nexport const FormModal = ({ confirm, cancel }) => {\r\n  const [theme] = useContext(ThemeContext);\r\n  return (\r\n    <Modal>\r\n      <Container theme={theme}>\r\n        <div>本当に作成しますか？</div>\r\n        <ButtonWrapper>\r\n          <Button onClick={cancel}>Cancel</Button>\r\n          <Button onClick={confirm}>OK</Button>\r\n        </ButtonWrapper>\r\n      </Container>\r\n    </Modal>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\nimport { useState, useRef, useEffect } from 'react';\r\n\r\nconst HintContainer = styled.div`\r\n  position: relative;\r\n  display: inline-flex;\r\n  margin-left: 12px;\r\n`\r\n\r\nconst HintInner = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  border: 1px solid #757575;\r\n  width: 24px;\r\n  height: 24px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst PopupContainer = styled.div`\r\n  position: absolute;\r\n  left: 88%;\r\n  bottom: 12px;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 8px;\r\n  width: 140px;\r\n  border: 1px solid black;\r\n  border-radius: 8px;\r\n`\r\n\r\nexport const Hint = () => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) ref.current.focus();\r\n  })\r\n  return (\r\n    <HintContainer>\r\n      <HintInner onClick={() => setShowPopup(true)}>\r\n        ？\r\n      </HintInner>\r\n      {\r\n        showPopup && (\r\n          <PopupContainer ref={ref} onBlur={() => setShowPopup(false)} tabIndex={0}>\r\n            言語の名前です\r\n          </PopupContainer>\r\n        )\r\n      }\r\n    </HintContainer>\r\n  )\r\n}\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from \"./components/button\";\r\nimport { TabBodyContainer } from \"./components/tab-body-container\";\r\nimport { FormModal } from \"./FormModal\";\r\nimport { Hint } from \"./Hint\";\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  color: #757575;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n`\r\nconst Input = styled.input`\r\n  border-radius: 3px;\r\n  padding: 4px 8px;\r\n  border: 1px solid black;\r\n`\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 24px;\r\n`\r\nconst FormButton = styled(Button)`\r\n  width: 120px;\r\n`\r\n\r\nexport const Form = ({ onAddLang }) => {\r\n  const [text, setText] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    setShowModal(true);\r\n  }\r\n\r\n  return (\r\n    <TabBodyContainer title=\"新しい言語の追加\">\r\n      <form onSubmit={submitForm}>\r\n        <div>\r\n          <Label>言語</Label>\r\n          <Input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} autoFocus/>\r\n          <Hint />\r\n        </div>\r\n        <ButtonContainer>\r\n          <FormButton>追加</FormButton>\r\n        </ButtonContainer>\r\n      </form>\r\n      {\r\n        showModal &&\r\n          <FormModal\r\n            confirm={() => onAddLang(text)}\r\n            cancel={() => setShowModal(false)}\r\n          />\r\n      }\r\n    </TabBodyContainer>\r\n  )\r\n}\r\n","const LANGUAGES = [\r\n  'JavaScript',\r\n  'C++',\r\n  'Ruby',\r\n  'Java',\r\n  'PHP',\r\n  'Go'\r\n];\r\n\r\nexport const getLanguages = () => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(LANGUAGES);\r\n    }, 1000);\r\n  });\r\n};\r\n","import { useContext } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"./components/button\";\r\nimport { ThemeContext } from \"./contexts/ThemeContext\";\r\n\r\nconst Container = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 24px 64px 0;\r\n  border-bottom: 1px solid #E0E0E0;\r\n`\r\n\r\nconst HeaderUl = styled.ul`\r\n  display: flex;\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\nconst HeaderLi = styled.li`\r\n  list-style: none;\r\n  padding: 4px 12px;\r\n  cursor: pointer;\r\n  border-bottom: ${props => props.focused ? '2px solid #F44336' : 'none' };\r\n`\r\n\r\nconst HeaderButton = styled(Button)`\r\n  padding: 0;\r\n  margin-bottom: 4px;\r\n`\r\n\r\nexport const Header = ({ tab, setTab }) => {\r\n  const [theme, toggleTheme] = useContext(ThemeContext);\r\n  return (\r\n    <Container>\r\n      <HeaderUl>\r\n        <HeaderLi focused={tab === 'list'} onClick={() => setTab('list')}>リスト</HeaderLi>\r\n        <HeaderLi focused={tab === 'form'} onClick={() => setTab('form')}>フォーム</HeaderLi>\r\n      </HeaderUl>\r\n      <HeaderButton onClick={toggleTheme}>テーマ変更</HeaderButton>\r\n    </Container>\r\n  )\r\n}\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport { List } from \"./List\";\r\nimport { Form } from \"./Form\";\r\nimport styled from 'styled-components';\r\nimport { getLanguages } from \"./const/languages\";\r\nimport { withLoading } from \"./hoc/with-loading\";\r\nimport { Header } from \"./Header\";\r\nimport { ThemeContext } from \"./contexts/ThemeContext\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  color: ${({ theme }) => theme.color};\r\n  background-color: ${({ theme }) => theme.backgroundColor};\r\n`\r\n\r\nfunction App({ data }) {\r\n  const [tab, setTab] = useState('list');\r\n  const [langs, setLangs] = useState(data);\r\n\r\n  const [theme] = useContext(ThemeContext);\r\n\r\n  const addLang = (lang) => {\r\n    setLangs([...langs, lang]);\r\n    setTab('list');\r\n  };\r\n\r\n  return (\r\n    <Container theme={theme}>\r\n      <Header tab={tab} setTab={setTab}/>\r\n      {\r\n        tab === 'list' ? <List langs={langs} /> : <Form onAddLang={addLang}/>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from 'react';\r\nimport { ThemeContext,THEMES } from \"./contexts/ThemeContext\";\r\nimport { withLoading } from \"./hoc/with-loading\";\r\nimport App from \"./App\";\r\nimport { getLanguages } from \"./const/languages\";\r\n\r\nconst AppComponent = withLoading(App, getLanguages)\r\n\r\nexport const AppContainer = () => {\r\n  const [theme, setTheme] = useState(THEMES.dark);\r\n\r\n  const toggleTheme = () => {\r\n    const nextTheme = (theme === THEMES.dark) ? THEMES.light : THEMES.dark;\r\n    setTheme(nextTheme);\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[theme, toggleTheme]}>\r\n      <AppComponent />\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { AppContainer } from \"./AppContainer\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContainer />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}